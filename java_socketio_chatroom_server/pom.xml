<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>io.github.marcodiri</groupId>
	<artifactId>java_socketio_chatroom_server</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>java_socketio_chatroom_server</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>

		<junit.version>4.13.1</junit.version>
		<assertj.version>3.19.0</assertj.version>
		<mockito.version>3.10.0</mockito.version>
		<log4j.version>2.14.1</log4j.version>
		<awaitility.version>4.1.0</awaitility.version>
		<jacoco.plugin.version>0.8.7</jacoco.plugin.version>
		<pitest.plugin.version>1.6.6</pitest.plugin.version>
		<coveralls.plugin.version>4.3.0</coveralls.plugin.version>
		<mongo.driver.version>3.12.8</mongo.driver.version>
		<javax.version>4.0.1</javax.version>
		<jetty-server.version>9.4.41.v20210516</jetty-server.version>
		<jetty-servlet.version>9.4.41.v20210516</jetty-servlet.version>
		<jetty-websocket.version>9.4.41.v20210516</jetty-websocket.version>
		<socketIO.version>3.0.1</socketIO.version>
		<engineIO.version>4.0.3</engineIO.version>
		<engineIO-jetty.version>4.0.3</engineIO-jetty.version>

		<sonar.coverage.exclusions>
			**/model/*.*,
			**/ServerWrapper.*,
			**/ServerWrapper$*.*,
			**/App.*
		</sonar.coverage.exclusions>

		<sonar.junit.reportPaths>
			${project.build.directory}/surefire-reports,
			${project.build.directory}/failsafe-reports
		</sonar.junit.reportPaths>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.assertj</groupId>
				<artifactId>assertj-core</artifactId>
				<version>${assertj.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>${mockito.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-bom</artifactId>
				<version>${log4j.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>org.awaitility</groupId>
				<artifactId>awaitility</artifactId>
				<version>${awaitility.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.mongodb</groupId>
				<artifactId>mongo-java-driver</artifactId>
				<version>${mongo.driver.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>${javax.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-server</artifactId>
				<version>${jetty-server.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-servlet</artifactId>
				<version>${jetty-servlet.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty.websocket</groupId>
				<artifactId>websocket-server</artifactId>
				<version>${jetty-websocket.version}</version>
			</dependency>
			<dependency>
				<groupId>io.socket</groupId>
				<artifactId>socket.io-server</artifactId>
				<version>${socketIO.version}</version>
			</dependency>
			<dependency>
				<groupId>io.socket</groupId>
				<artifactId>engine.io-server</artifactId>
				<version>${engineIO.version}</version>
			</dependency>
			<dependency>
				<groupId>io.socket</groupId>
				<artifactId>engine.io-server-jetty</artifactId>
				<version>${engineIO-jetty.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.awaitility</groupId>
			<artifactId>awaitility</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongo-java-driver</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-server</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-servlet</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty.websocket</groupId>
			<artifactId>websocket-server</artifactId>
		</dependency>
		<dependency>
			<groupId>io.socket</groupId>
			<artifactId>socket.io-server</artifactId>
		</dependency>
		<dependency>
			<groupId>io.socket</groupId>
			<artifactId>engine.io-server</artifactId>
		</dependency>
		<dependency>
			<groupId>io.socket</groupId>
			<artifactId>engine.io-server-jetty</artifactId>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<!-- lock down plugins versions to avoid using Maven defaults -->
				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<version>3.1.0</version>
				</plugin>
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.0.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.8.0</version>
				</plugin>
				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.22.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>2.22.2</version>
					<executions>
						<execution>
							<goals>
								<goal>integration-test</goal>
								<goal>verify</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.0.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.5.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.8.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.7.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-project-info-reports-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>
				<plugin>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>3.3.0</version>
					<executions>
						<execution>
							<phase>package</phase>
							<goals>
								<goal>single</goal>
							</goals>
							<configuration>
								<descriptorRefs>
									<descriptorRef>jar-with-dependencies</descriptorRef>
								</descriptorRefs>
								<archive>
									<manifest>
										<mainClass>io.github.marcodiri.java_socketio_chatroom_server.App</mainClass>
									</manifest>
								</archive>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>3.2.0</version>
					<executions>
						<execution>
							<id>add-test-source</id>
							<phase>generate-test-sources</phase>
							<goals>
								<goal>add-test-source</goal>
							</goals>
							<configuration>
								<sources>
									<source>src/it/java</source>
								</sources>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco.plugin.version}</version>
					<executions>
						<execution>
							<goals>
								<!-- binds by default to the phase "initialize" -->
								<goal>prepare-agent</goal>
								<!-- binds by default to the phase "verify" -->
								<goal>report</goal>
							</goals>
						</execution>
						<execution>
							<id>jacoco-check</id>
							<goals>
								<!-- binds by default to the phase "verify" -->
								<goal>check</goal>
							</goals>
							<configuration>
								<rules>
									<rule>
										<element>PACKAGE</element>
										<limits>
											<limit>
												<counter>LINE</counter>
												<value>COVEREDRATIO</value>
												<minimum>1</minimum>
											</limit>
										</limits>
									</rule>
								</rules>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.pitest</groupId>
					<artifactId>pitest-maven</artifactId>
					<version>${pitest.plugin.version}</version>
					<configuration>
						<mutators>
							<mutator>DEFAULTS</mutator>
							<mutator>NON_VOID_METHOD_CALLS</mutator>
						</mutators>
						<mutationThreshold>100</mutationThreshold>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.eluder.coveralls</groupId>
					<artifactId>coveralls-maven-plugin</artifactId>
					<version>${coveralls.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>io.fabric8</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>0.36.0</version>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
			</plugin>
			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<configuration>
					<images>
						<image>
							<name>mongo:4.2.14</name>
							<run>
								<ports>
									<port>27017:27017</port>
								</ports>
							</run>
						</image>
					</images>
				</configuration>
				<executions>
					<execution>
						<id>docker-start</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
					</execution>
					<execution>
						<id>docker-stop</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>jacoco</id>
			<activation>
				<!-- Activated when the system property "skipCoverage" is not defined 
					at all or is defined with a value which is not "true", thus, implicitly active 
					by default -->
				<property>
					<name>skipCoverage</name>
					<value>!true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<!-- configured in pluginManagement -->
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<configuration>
							<excludes>
								<exclude>**/model/*.*</exclude>
								<exclude>**/ServerWrapper.*</exclude>
								<exclude>**/ServerWrapper$*.*</exclude>
								<exclude>**/App.*</exclude>
							</excludes>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
					</plugin>
					<plugin>
						<artifactId>maven-failsafe-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>mutation-testing</id>
			<build>
				<plugins>
					<plugin>
						<!-- configured also in pluginManagement -->
						<groupId>org.pitest</groupId>
						<artifactId>pitest-maven</artifactId>
						<configuration>
							<excludedClasses>
								<param>io.github.marcodiri.java_socketio_chatroom_server.model.*</param>
								<param>io.github.marcodiri.java_socketio_chatroom_server.App</param>
								<param>io.github.marcodiri.java_socketio_chatroom_server.ServerWrapper</param>
								<param>io.github.marcodiri.java_socketio_chatroom_server.repository.mongo.ServerMongoRepository</param>
							</excludedClasses>
							<targetTests>
								<param>io.github.marcodiri.java_socketio_chatroom_server.*Test</param>
							</targetTests>
						</configuration>
						<executions>
							<execution>
								<phase>verify</phase>
								<goals>
									<goal>mutationCoverage</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
