<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>io.github.marcodiri</groupId>
		<artifactId>java_socketio_chatroom_parent</artifactId>
		<version>0.0.1-SNAPSHOT</version>
		<relativePath>../java_socketio_chatroom_parent</relativePath>
	</parent>

	<artifactId>java_socketio_chatroom_e2e</artifactId>
	<packaging>jar</packaging>

	<name>java_socketio_chatroom_e2e</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<dependencies>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>java_socketio_chatroom_server</artifactId>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>java_socketio_chatroom_client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongo-java-driver</artifactId>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-swing-junit</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-test-source</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/e2e/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<execution>
						<id>e2e-tests</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<includes>
								<include>**/*E2E.java</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.basedir}/target/extra-resources</outputDirectory>
							<resources>
								<resource>
									<targetPath>server-app</targetPath>
									<directory>${project.basedir}/../java_socketio_chatroom_server/target</directory>
									<includes>
										<include>
											*jar-with-dependencies.jar
										</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<configuration>
					<containerNamePattern>%a</containerNamePattern>
					<autoCreateCustomNetworks>true</autoCreateCustomNetworks>
					<images>
						<image>
							<name>openjdk:8</name>
							<alias>server</alias>
							<build>
								<contextDir>${project.basedir}</contextDir>
							</build>
							<run>
								<network>
									<mode>custom</mode>
									<name>server-db-network</name>
								</network>
								<ports>
									<port>3000:3000</port>
								</ports>
								<wait>
									<tcp>
										<mode>mapped</mode>
										<ports>
											<port>3000</port>
										</ports>
									</tcp>
									<time>10000</time>
								</wait>
								<dependsOn>
									<container>mongodb</container>
								</dependsOn>
							</run>
						</image>
						<image>
							<name>mongo:4.2.14</name>
							<alias>mongodb</alias>
							<run>
								<network>
									<mode>custom</mode>
									<name>server-db-network</name>
								</network>
								<ports>
									<port>27017:27017</port>
								</ports>
								<wait>
									<http>
										<url>http://localhost:27017</url>
										<method>GET</method>
										<status>200</status>
									</http>
									<time>10000</time>
								</wait>
							</run>
						</image>
					</images>
				</configuration>
				<executions>
					<execution>
						<id>docker-server-start</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>build</goal>
							<goal>start</goal>
						</goals>
					</execution>
					<execution>
						<id>docker-server-stop</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
